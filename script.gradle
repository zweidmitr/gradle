import sun.util.resources.LocaleData

ext {
    javaVersion = 16
    currentData = LocalDate.now()
}

println ext.javaVersion
println project.javaVersion
println javaVersion
//println "---- ALL properties"
//println project.properties
println "---- System: "
println System.getProperty("sys.example")

println "configuration phase"
println "gradle id: ${gradle.hashCode()}"
println "root: ${rootProject.hashCode()}}"

// task = new DefaultDask
//3
def map = [description: "Hello task", group: "zweim"]
//task("hello") {
//    println "configuration phase. Task hello"
//    println "task: $description, group: $group, actions: ${actions.size()}"
//}
//Project ->[Task1, Task2]
//Task -> [Action1, Action2] ->action.execution (execution phase)
//task hello(description: "Hello task", group: "zweim", type: DefaultTask) {
//    println "configuration phase. Task hello"
////    description = "Hello task"
////    group = "zweim"
//
//    doLast {
//        println "execution phase, Action1 - (2)"
//    }
//    doFirst {
//        println "execution phase, Action2 - (1)"
//    }
//    doLast {
//        println "execution phase, Action3 - (3)"
//    }
//    println "task: $description, group: $group, actions: ${actions.size()}"
//    println "path task: $path"
//}

//gradle.taskGraph.allTasks

//hello.doFirst {
//
//}

//tasks.findByName("hello").
//1
//hello.description = "Hello task"
//hello.group = "zweim"

//2
//hello.configure Closure
//hello {
//    println "configuration phase. Task hello"
//    description = "Hello task"
//    group = "zweim"
//}

task first {
    doLast {
        println "Task 1"
    }
}
task second {
    doLast {
        println "Task 2"
    }
}
task third {
    doLast {
        println "Task 3"
    }
}
task fourth(group: "zweim") {
    doLast {
        println "Task 4"
    }
}

//// 2 <--- 4
//// depends  - перед fourth -> second
//fourth.dependsOn second
//second.dependsOn first
//
//// finalizedBy  - после second -> third
//second.finalizedBy third

fourth.dependsOn first
fourth.dependsOn second
fourth.dependsOn third

//first after second
first.mustRunAfter second
//second.shouldRnAfter first

println " ***"
gradle.taskGraph.whenReady { TaskExecutionGraph graph ->
    println "---- Graph:"
    graph.allTasks.each {
        println "${it.name}"
    }
}

gradle.taskGraph.beforeTask { Task task ->
    if (task.group == 'zweim') {
        println "beforeTask callBak $task"
    }
}

gradle.taskGraph.afterTask { Task task ->
    if (task.name == 'first') {
        println "afteTask callBak $task"
    }
}

defaultTasks "fourth"


//2
//1  4
//3